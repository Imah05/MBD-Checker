#ifndef RSI_H
#define RSI_H

#include "game_state.h"
#include <list>


bool checkGraph(string cmd, char firstPlayer);

// Returns a list of all the graphs generated by the nauty command cmd, for 
// which sum_{v != w} |deg(v)-3| is at most surBound and Dominator loses where 
// firstPlayer starts the game. Here w has maximum degree and the sum ranges 
// over all vertices of the graph except for w. 
list<string> checkR(string cmd, char firstPlayer, int surBound);

// Returns true if and only if every graph generated by the nauty command cmd 
// either has more than surBound vertices of degree less than 3 or Dominator 
// wins on the graph with firstPlayer starting the game.
bool checkSI(string cmd, char firstPlayer, int surBound);

// checkLemmaRn checks the Lemma #n in the R-Lemma table.
bool checkLemmaR2();
bool checkLemmaR3();
bool checkLemmaR4();
bool checkLemmaR6();

// checkLemmaSIn checks the Lemma #n in the SI-Lemma table.
bool checkLemmaSI1();
bool checkLemmaSI2();
bool checkLemmaSI3();
bool checkLemmaSI4();
bool checkLemmaSI5();
bool checkLemmaSI6();
bool checkLemmaSI7();

#endif // RSI_H